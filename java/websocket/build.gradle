buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.18'
    }
}

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

apply plugin: 'com.google.protobuf'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

java {
    withJavadocJar()
    withSourcesJar()
}

dependencies {
    if (JavaVersion.current().isJava9Compatible()) {
        // Workaround for @javax.annotation.Generated
        // see: https://github.com/grpc/grpc-java/issues/3633
        implementation("javax.annotation:javax.annotation-api:1.3.2")
    }

    implementation 'org.jetbrains:annotations:20.1.0'
    compileOnly("org.projectlombok:lombok:1.18.22")
    annotationProcessor("org.projectlombok:lombok:1.18.22")

    testCompileOnly("org.projectlombok:lombok:1.18.22")
    testAnnotationProcessor("org.projectlombok:lombok:1.18.22")

    testImplementation("junit:junit:4.13.2")
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.8.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.2.0")
    testImplementation("org.mockito:mockito-core:3.4.0")
    testImplementation("org.slf4j:slf4j-simple:2.0.0-alpha7")

    implementation("io.netty:netty-buffer:${gradle.ext.nettyVersion}")
    implementation("io.netty:netty-codec:${gradle.ext.nettyVersion}")
    implementation("io.netty:netty-common:${gradle.ext.nettyVersion}")
    implementation("io.netty:netty-handler:${gradle.ext.nettyVersion}")
    implementation("io.netty:netty-codec-http:${gradle.ext.nettyVersion}")

    api(project(":core"))
}

test {
    useJUnitPlatform {
        includeEngines 'junit-vintage'
    }
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${gradle.ext.projectProtobufVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${gradle.ext.projectGrpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
    test {
        java {
            srcDirs 'build/generated/source/proto/test/grpc'
            srcDirs 'build/generated/source/proto/test/java'
        }
    }
}

publishing {
    repositories {
        maven {
            def releasesRepoUrl = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
            def snapshotsRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username = findProperty('ossrhUsername')
                password = findProperty('ossrhPassword')
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            groupId = group
            artifactId = 'websocket'
            from components.java
//            versionMapping {
//                usage('java-api') {
//                    fromResolutionOf('runtimeClasspath')
//                }
//                usage('java-runtime') {
//                    fromResolutionResult()
//                }
//            }
            pom {
                name = 'websocket'
                description = 'GRPC over Websocket'
                url = 'https://github.com/jc-lab/grpc-over'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'jclab'
                        name = 'Joseph Lee'
                        email = 'joseph@jc-lab.net'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/jc-lab/grpc-over.git'
                    developerConnection = 'scm:git:ssh://git@github.com:jc-lab/grpc-over.git'
                    url = 'https://github.com/jc-lab/grpc-over'
                }
            }
        }
    }
}

signing {
    useGpgCmd()
    sign publishing.publications.mavenJava
}
